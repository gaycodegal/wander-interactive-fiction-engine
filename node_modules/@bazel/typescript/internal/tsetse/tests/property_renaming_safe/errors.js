"use strict";
function propAccess(x) {
    x.prop; // error
    x['prop']; // ok
}
function descructuring(x) {
    const { prop } = x; // ok, but should be an error.
}
function mixedPropAccess(x) {
    x.namedProp; // ok
    x['namedProp']; // ok
    x.prop; // error
    x['prop']; // ok
}
function genericAccess(x) {
    x.prop; // error
    x['prop']; // ok
}
function unionType(x) {
    x.prop; // error
    x['prop']; // ok
}
/**
 * Curiously Record<string, T> is treated like an index signature.
 */
function recordStringType(x) {
    x.prop; // error
    x['prop']; // ok
}
/**
 * But narrowing the generic parameter to a string literal union exempts it.
 */
function recordNarrowType(x) {
    x.prop; // ok
    x['prop']; // ok
}
/**
 * Similary, to Records mapped types of of 'in string' are threated like a
 * string index signature.
 */
function mappedType(x) {
    x.prop; // error
    x['prop']; // ok
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vZXh0ZXJuYWwvYnVpbGRfYmF6ZWxfcnVsZXNfdHlwZXNjcmlwdC9pbnRlcm5hbC90c2V0c2UvdGVzdHMvcHJvcGVydHlfcmVuYW1pbmdfc2FmZS9lcnJvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUtBLFNBQVMsVUFBVSxDQUFDLENBQVM7SUFDM0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFLLFFBQVE7SUFDcEIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUUsS0FBSztBQUNuQixDQUFDO0FBRUQsU0FBUyxhQUFhLENBQUMsQ0FBUztJQUM5QixNQUFNLEVBQUMsSUFBSSxFQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUUsOEJBQThCO0FBQ25ELENBQUM7QUFNRCxTQUFTLGVBQWUsQ0FBQyxDQUFjO0lBQ3JDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBSyxLQUFLO0lBQ3RCLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFFLEtBQUs7SUFDdEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFVLFFBQVE7SUFDekIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQU8sS0FBSztBQUN4QixDQUFDO0FBRUQsU0FBUyxhQUFhLENBQW1CLENBQUk7SUFDM0MsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFLLFFBQVE7SUFDcEIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUUsS0FBSztBQUNuQixDQUFDO0FBT0QsU0FBUyxTQUFTLENBQUMsQ0FBdUM7SUFDeEQsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFLLFFBQVE7SUFDcEIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUUsS0FBSztBQUNuQixDQUFDO0FBRUQ7O0dBRUc7QUFDSCxTQUFTLGdCQUFnQixDQUFDLENBQXlCO0lBQ2pELENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBSyxRQUFRO0lBQ3BCLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFFLEtBQUs7QUFDbkIsQ0FBQztBQUVEOztHQUVHO0FBQ0gsU0FBUyxnQkFBZ0IsQ0FBQyxDQUFpQztJQUN6RCxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUssS0FBSztJQUNqQixDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBRSxLQUFLO0FBQ25CLENBQUM7QUFFRDs7O0dBR0c7QUFDSCxTQUFTLFVBQVUsQ0FBQyxDQUEyQjtJQUM3QyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUssUUFBUTtJQUNwQixDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBRSxLQUFLO0FBQ25CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuaW50ZXJmYWNlIElkeFNpZyB7XG4gIFtrZXk6IHN0cmluZ106IHN0cmluZztcbn1cblxuZnVuY3Rpb24gcHJvcEFjY2Vzcyh4OiBJZHhTaWcpIHtcbiAgeC5wcm9wOyAgICAgLy8gZXJyb3JcbiAgeFsncHJvcCddOyAgLy8gb2tcbn1cblxuZnVuY3Rpb24gZGVzY3J1Y3R1cmluZyh4OiBJZHhTaWcpIHtcbiAgY29uc3Qge3Byb3B9ID0geDsgIC8vIG9rLCBidXQgc2hvdWxkIGJlIGFuIGVycm9yLlxufVxuXG5pbnRlcmZhY2UgTWl4ZWRJZHhTaWcgZXh0ZW5kcyBJZHhTaWcge1xuICBuYW1lZFByb3A6IHN0cmluZztcbn1cblxuZnVuY3Rpb24gbWl4ZWRQcm9wQWNjZXNzKHg6IE1peGVkSWR4U2lnKSB7XG4gIHgubmFtZWRQcm9wOyAgICAgLy8gb2tcbiAgeFsnbmFtZWRQcm9wJ107ICAvLyBva1xuICB4LnByb3A7ICAgICAgICAgIC8vIGVycm9yXG4gIHhbJ3Byb3AnXTsgICAgICAgLy8gb2tcbn1cblxuZnVuY3Rpb24gZ2VuZXJpY0FjY2VzczxUIGV4dGVuZHMgSWR4U2lnPih4OiBUKSB7XG4gIHgucHJvcDsgICAgIC8vIGVycm9yXG4gIHhbJ3Byb3AnXTsgIC8vIG9rXG59XG5cbmludGVyZmFjZSBNaXhlZEluZGV4U2lnVXNlZEluVW5pb24ge1xuICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG4gIG5hbWVkUHJvcDI6IHN0cmluZztcbn1cblxuZnVuY3Rpb24gdW5pb25UeXBlKHg6IE1peGVkSWR4U2lnfE1peGVkSW5kZXhTaWdVc2VkSW5Vbmlvbikge1xuICB4LnByb3A7ICAgICAvLyBlcnJvclxuICB4Wydwcm9wJ107ICAvLyBva1xufVxuXG4vKipcbiAqIEN1cmlvdXNseSBSZWNvcmQ8c3RyaW5nLCBUPiBpcyB0cmVhdGVkIGxpa2UgYW4gaW5kZXggc2lnbmF0dXJlLlxuICovXG5mdW5jdGlvbiByZWNvcmRTdHJpbmdUeXBlKHg6IFJlY29yZDxzdHJpbmcsIG51bWJlcj4pIHtcbiAgeC5wcm9wOyAgICAgLy8gZXJyb3JcbiAgeFsncHJvcCddOyAgLy8gb2tcbn1cblxuLyoqXG4gKiBCdXQgbmFycm93aW5nIHRoZSBnZW5lcmljIHBhcmFtZXRlciB0byBhIHN0cmluZyBsaXRlcmFsIHVuaW9uIGV4ZW1wdHMgaXQuXG4gKi9cbmZ1bmN0aW9uIHJlY29yZE5hcnJvd1R5cGUoeDogUmVjb3JkPCdwcm9wJ3wnb3RoZXInLCBudW1iZXI+KSB7XG4gIHgucHJvcDsgICAgIC8vIG9rXG4gIHhbJ3Byb3AnXTsgIC8vIG9rXG59XG5cbi8qKlxuICogU2ltaWxhcnksIHRvIFJlY29yZHMgbWFwcGVkIHR5cGVzIG9mIG9mICdpbiBzdHJpbmcnIGFyZSB0aHJlYXRlZCBsaWtlIGFcbiAqIHN0cmluZyBpbmRleCBzaWduYXR1cmUuXG4gKi9cbmZ1bmN0aW9uIG1hcHBlZFR5cGUoeDoge1t4IGluIHN0cmluZ106IGJvb2xlYW59KSB7XG4gIHgucHJvcDsgICAgIC8vIGVycm9yXG4gIHhbJ3Byb3AnXTsgIC8vIG9rXG59XG4iXX0=